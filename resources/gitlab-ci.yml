include:
  - '/nso_cicd/pipeline_utils/environments.yml'

# Define the stages of the pipeline
stages:
  - build
  - test
  - deliver
  - deploy_prod

runner pre-reqs:
  stage: .pre
  when: on_success
  script:
    - echo "(Pre-reqs) Checking the environment"
    - python --version
    - pipx install robotframework-sshlibrary --include-deps --force
    - sshpass -p "$NSO_DEV_PWD" ssh -o StrictHostKeyChecking=no $NSO_DEV_USER@$NSO_DEV_IP "echo 'NSO Dev Environment Accessible'"
    - sshpass -p "$NSO_PROD_PWD" ssh -o StrictHostKeyChecking=no $NSO_DEV_USER@$NSO_PROD_IP "echo 'NSO Prod Environment Accessible'"


# Step to compile the package in the development NSO environment
package-compilation-üî®:
  stage: build
  when: on_success
  except:
    - main
  script:
    - echo "(Build üî®) Loading and compiling packages in the NSO dev container"
    - sshpass -p "$NSO_DEV_PWD" scp -o StrictHostKeyChecking=no -r nso_cicd/packages/$PACKAGE $NSO_DEV_USER@$NSO_DEV_IP:/home/developer/$PACKAGE
    - sshpass -p "$NSO_DEV_PWD" ssh -o StrictHostKeyChecking=no $NSO_DEV_USER@$NSO_DEV_IP "
        cd /home/developer/ &&
        cp -r $PACKAGE /nso/run/packages &&
        source /opt/ncs/ncs-6.4.4/ncsrc &&
        cd /nso/run/packages/$PACKAGE/src &&
        make clean &&
        make &&
        cd /nso/run/packages &&
        tar -czvf /home/developer/nso-package_$PACKAGE.tar.gz $PACKAGE"

# Step to load the compiled package into the testing NSO environment
package-load-üì•:
  stage: build
  when: on_success
  except:
    - main
  script:
    - echo "(Build üì•) Loading compiled packages to testing env NSO"
    # SSH into the NSO development environment and reload the package
    - sshpass -p "$NSO_DEV_PWD" ssh -o StrictHostKeyChecking=no $NSO_DEV_USER@$NSO_DEV_IP "
      source /opt/ncs/ncs-6.4.4/ncsrc &&
      echo 'packages reload' | ncs_cli -Cu admin"
  dependencies:
    - package-compilation-üî®

# Step to test the loopback service in the NSO testing environment
test-loopback-service-üïµüèΩ:
  stage: test
  when: on_success
  except:
    - main
  script:
    - echo "(Test üïµüèΩ) Deploying service in the NSO test env"
    # Test the service on an IOS-XR device
    - echo "Test IOS-XR"
    - cd nso_cicd/tests/loopback-test && python loopback-test.py --nso_url "http://$NSO_DEV_IP:8080" --device "dev-core-rtr01" --username $NSO_DEV_USER --password $NSO_DEV_PWD
    # Test the service on an IOS device
    - echo "Test IOS"
    - python loopback-test.py --nso_url "http://$NSO_DEV_IP:8080" --device "dev-dist-rtr01" --username $NSO_DEV_USER --password $NSO_DEV_PWD
  dependencies:
    - package-load-üì•

# Step to clean up the development environment
cleanup-üóëÔ∏è:
  stage: .post
  only:
    - main
  allow_failure: true
  script:
    - echo "(Cleanup üóëÔ∏è) Removing files from NSO Dev"
    # SSH into the NSO development environment and remove the package files
    - sshpass -p "$NSO_DEV_PWD" ssh -o StrictHostKeyChecking=no $NSO_DEV_USER@$NSO_DEV_IP "
      rm -rf $PACKAGE &&
      rm -rf cd /nso/run/packages/$PACKAGE &&
      source /opt/ncs/ncs-6.4.4/ncsrc && echo 'packages reload force' | ncs_cli -Cu admin"

# Step to load the package tarball onto the production NSO environment
load-production-üì¶:
  stage: deploy_prod
  when: on_success
  only:
    - main
  script:
    - echo "(Loadüì¶) Copying tarball to production NSO."
    - sshpass -p "$NSO_DEV_PWD" scp -o StrictHostKeyChecking=no $NSO_DEV_USER@$NSO_DEV_IP:/home/developer/nso-package_$PACKAGE.tar.gz .
    - sshpass -p "$NSO_PROD_PWD" scp -o StrictHostKeyChecking=no nso-package_$PACKAGE.tar.gz $NSO_DEV_USER@$NSO_PROD_IP:/home/developer/

# Step to deploy the package on the production NSO environment
deploy-production-üì¨:
  stage: deploy_prod
  when: on_success
  only:
    - main
  script:
    - echo "(Deployüì¨) Deploying package on production NSO."
    - sshpass -p "$NSO_PROD_PWD" ssh -o StrictHostKeyChecking=no $NSO_DEV_USER@$NSO_PROD_IP "
        cd /home/developer/ &&
        tar -xvf nso-package_$PACKAGE.tar.gz &&
        rm -rf nso-package_$PACKAGE.tar.gz &&
        cp -r $PACKAGE /nso/run/packages/loopback &&
        source /opt/ncs/ncs-6.4.4/ncsrc &&
        cd /nso/run/packages/$PACKAGE/src &&
        make clean &&
        make &&
        echo 'packages reload' | ncs_cli -Cu admin"
  dependencies:
    - load-production-üì¶

retry: 2